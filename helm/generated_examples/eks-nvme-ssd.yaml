---
# Source: provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-provisioner
  namespace: default
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: provisioner/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-provisioner-config
  namespace: default
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
data:
  storageClassMap: |
    nvme-ssd:
      hostDir: /dev/disk/kubernetes
      mountDir: /dev/disk/kubernetes
---
# Source: provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nvme-ssd
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-provisioner-node-clusterrole
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-provisioner-pv-binding
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-provisioner
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:persistent-volume-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-provisioner-node-binding
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-provisioner
  namespace: default
roleRef:
  kind: ClusterRole
  name: RELEASE-NAME-provisioner-node-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: provisioner/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: RELEASE-NAME-provisioner
  namespace: default
  labels:
    helm.sh/chart: provisioner-2.4.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: provisioner
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: provisioner
        app.kubernetes.io/instance: RELEASE-NAME
      annotations:
        checksum/config: f697cea1c0f2d8c8a04ded932249623640c65b083520be18ee5db686a8fcbe58
    spec:
      serviceAccountName: RELEASE-NAME-provisioner
      containers:
        - name: provisioner
          image: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JOB_CONTAINER_IMAGE
            value: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
          ports:
          - name: metrics
            containerPort: 8080
          volumeMounts:
            - name: provisioner-config
              mountPath: /etc/provisioner/config
              readOnly: true
            - name: provisioner-dev
              mountPath: /dev
            - name: nvme-ssd
              mountPath: /dev/disk/kubernetes
              mountPropagation: HostToContainer
      volumes:
        - name: provisioner-config
          configMap:
            name: RELEASE-NAME-provisioner-config
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: nvme-ssd
          hostPath:
            path: /dev/disk/kubernetes
